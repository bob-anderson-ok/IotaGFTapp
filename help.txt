
General

    The IOTA GFT Flash Timer is based on an Arduino Mega2560 R3 with a custom shield.

    The shield contains a GPS receiver (with a 1PPS output) and includes a wide dynamic
    range LED intensity control to enable the LED flash intensity to be matched to the
    camera and telescope configuration while avoiding pixel saturation during flashes.

    In operation, the Arduino sends 'sentences' (strings terminated by CR LF). There are
    6 'standard' sentences: 4 NMEA GPS sentences plus a P (for pulse) and a MODE that
    reports the internal status of the GFT. There are other sentences that will be emitted
    in response to 'events' such as a detected error, a command entry, a command response,
    the LED turning on or off, etc. These 'other' sentences are always displayed but NOT
    written to the standard log.

    All output from the Arduino is recorded in a log file (IotaGFT_LOG.txt) automatically named
    from the date and time - UTC is used for ease of correlation with an occultation time.

    All flash edges that happen during the time this app is active are given UTC timestamps
    and written to a log file (FLASH_EDGE_TIMES.txt).

    Log files are always created in the directory where the app is placed (started from) and
    moved to the SharpCap folder containing the recorded fits files at the end of the recording
    session to form a complete record of the recording.


Top line status bar

    Once stable communication with the Arduino has been established and the appropriate
    NMEA sentences are being received, the status of the GFT, your Latitude, Longitude,
    and Altitude will be continuously updated and displayed.

    Once "time synch" has been achieved, the UTC time and date will also be continuously
    updated and the Status: report will change from red characters to green.

Central panel

    The large central panel is used to display the output from the Arduino, once it has
    finished resetting and a valid com port has been selected. This display is always
    active but, to avoid excessive memory usage if the app is allowed to run unattended,
    it will be automatically cleared when 100,000 lines are in the list.

baudrate (optional command line argument - no entry widget)

    When the app starts, the serial port baudrate is set to 250000 baud to match the
    default setting of the Arduino. You will need to change this value only if a
    different baudrate is programmed into the Arduino. This can be done by adding
    the desired baudrate as a command line argument when invoking the app.

Serial ports available (drop down selection list)

    This drop down list shows all the available serial ports. Normally, there will
    only be a single serial port available, in which case it will be assumed that it
    is the one connected to the Arduino, and it will automatically be opened.
    If there are more than one available serial ports, you must select the one for
    the app to use. Serial communication with the Arduino will not be established
    until a selection has been made.

    Note: if you make a selection while a serial port is currently open, the currently
    open serial port is closed. There is also a button available to directly
    close the open port.

Serial port open: none (label)

    When a com port has been selected, this label will change to give the name
    of the port in use.

Close serial port (button)

    Click this button to close the currently open serial port.

    Note: It may take several seconds for the port to close, particularly
    for a serial port that is not responding.

    Note: if there is only one available serial port, it will be automatically
    reopened  If you really need to stop the serial communication in this case,
    just unplug it.

Show 1pps history (button)

    Use this button to view a plot of 1pps pulses versus time. This is a crude
    quality control tool but any deviations from a straight line or, most important,
    any gaps (periods of time when GPS was lost).

(check box) Dark theme

    Dark theme is selected by default as this is likely to be the desirable
    theme during and observation. Uncheck this box to return to light theme.

(entry box) UTC event date/time

    Enter the center time of the event in the format yyyy-mm-dd hh:mm:ss

(entry box) Recording length (sec)

    Enter the desired recording time (in seconds). The "event" will be centered in
    this time region.

(check box) auto-run FitsReader

    FitsReader is the app that will process the flash goalposts and insert GPS
    accurate timestamps in each fits file of the SharpCap recording. You may
    not want this app to be started automatically if you are doing an unattended
    recording.

(check box) shutdown CPU at end-of-recording

    For unattended operation, you ask that the CPU be shutdown at the end of the
    recording to save power. If checked, the auto-run FitsReader will be disabled
    as well.

Arm UTC start (button)

    Arm the recording scheduler. This requires that SharpCap be running as we have to
    the camera exposure time in order to properly compute a recording schedule.

    If the 'arming' was successful, the button will turn green.

    Clicking the green version of the button will disarm the scheduler.

Clear output (button)

    Click this button to clear the central panel

(check box) Auto-scroll enabled

    When this box is checked, the display of serial input lines automatically
    scrolls to the bottom when the next line is received.

Enter IOTA GFT command: (entry box)  Help: commands (button)

    Enter commands to be sent to the Flash Timer in the entry box.

    Press enter while the cursor is in the entry box to send the string to the
    Arduino.

Down the right hand side there is a set of checkboxes. These enable/disable the
display of the 6 standard sentence types that are emitted by the GFT. All other
sentence types always display. NOTE: all sentences are always written to the
log file whether they are displayed or not.

For setting the LED flash intensity conveniently, there is a checkbox labeled 'LED on'
at the lower right corner. When this is checked, a vertical slider appears at the
right edge of the window. Dragging this slider will change the flash intensity
by changing the effective current to the LED over a range of about 10,000 to 1
